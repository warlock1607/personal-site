{"version":3,"sources":["webpack:///./src/components/AppLink.js","webpack:///./src/components/button.js","webpack:///./src/pages/index.js"],"names":["AppLink","to","props","test","isInternal","a","href","as","LocalizedLink","Button","variant","sx","appearance","display","textAlign","lineHeight","textDecoration","fontSize","fontWeight","mr","px","py","border","borderRadius","Index","allMdx","data","useTranslations","hello","subline","Fragment","style","margin","className","listStyle","m","edges","map","post","node","key","frontmatter","title","fields","locale","mb","parent","relativeDirectory","color","date","query"],"mappings":"uMAIA,IAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAOC,E,oIAAV,iBAHD,KAAKC,KAIlBF,KAHU,SAAAA,GAAE,MAAI,YAAYE,KAAKF,GAGzBG,CAAWH,GACxB,kBAAC,IAAOI,EAAR,iBAAcH,EAAd,CAAqBI,KAAML,KAE3B,kBAAC,IAAOI,EAAR,eAAUE,GAAIC,IAAeP,GAAIA,GAAQC,K,YCRtC,IAAMO,EAAS,SAAC,GAAD,QAAGC,eAAH,MAAa,UAAb,EAA2BR,E,oIAA3B,uBACpB,sCACMA,EADN,CAEES,GAAI,CACFC,WAAY,OACZC,QAAS,eACTC,UAAW,SACXC,WAAY,UACZC,eAAgB,OAChBC,SAAU,UACVC,WAAY,OACZC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,OAAQ,EACRC,aAAc,EAEdb,QAAQ,WAAYA,O,YCpB1B,sCAiEec,UAxDD,SAAC,GAA0B,IAAhBC,EAAe,EAAvBC,KAAQD,OAAe,EACXE,cAAnBC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,QAEf,OACE,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,MACA,mBAAKnB,GAAI,CAAEU,GAAI,IACb,kBAAIV,GAAI,CAAEM,SAAS,QAAWW,GAC9B,iBAAGjB,GAAI,CAAEM,SAAS,UAAaY,GAC/B,YAAC,EAAD,CAAQnB,QAAQ,QAAhB,SACA,YAAC,EAAD,CAAQA,QAAQ,QAAhB,SAEF,kBAAIqB,MAAO,CAAEC,OAAO,YACpB,kBACEC,UAAU,YACVtB,GAAI,CACFuB,UAAW,OACXC,EAAG,EACHf,GAAI,EACJC,GAAI,IAGLI,EAAOW,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,OAChB,kBACEC,IAAQF,EAAKG,YAAYC,MAAtB,IAA+BJ,EAAKK,OAAOC,OAC9CjC,GAAI,CACFkC,GAAI,IAGN,kBACElC,GAAI,CACFwB,EAAG,IAGL,YAAC,EAAD,CACElC,GAAE,IAAMqC,EAAKQ,OAAOC,kBACpBpC,GAAI,CACFqC,MAAO,UACPhC,eAAgB,OAChB,gBAAiB,CACfgC,MAAO,UACPhC,eAAgB,eAInBsB,EAAKG,YAAYC,QAGtB,qBAAO/B,GAAI,CAAEO,WAAY,SAAWoB,EAAKG,YAAYQ,aAhDjE,IA0DaC,EAAK","file":"component---src-pages-index-js-69290ca2901857e220ae.js","sourcesContent":["import React from 'react'\r\nimport { Styled } from 'theme-ui'\r\nimport { LocalizedLink } from './localizedLink'\r\n\r\nconst isHash = str => /^#/.test(str)\r\nconst isInternal = to => /^\\/(?!\\/)/.test(to)\r\n\r\nexport const AppLink = ({ to, ...props }) =>\r\n  isHash(to) || !isInternal(to) ? (\r\n    <Styled.a {...props} href={to} />\r\n  ) : (\r\n    <Styled.a as={LocalizedLink} to={to} {...props} />\r\n  )\r\n","/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\n\r\nexport const Button = ({ variant = 'primary', ...props }) => (\r\n  <button\r\n    {...props}\r\n    sx={{\r\n      appearance: 'none',\r\n      display: 'inline-block',\r\n      textAlign: 'center',\r\n      lineHeight: 'inherit',\r\n      textDecoration: 'none',\r\n      fontSize: 'inherit',\r\n      fontWeight: 'bold',\r\n      mr: 1,\r\n      px: 3,\r\n      py: 2,\r\n      border: 0,\r\n      borderRadius: 4,\r\n      // pass variant prop to sx\r\n      variant: `buttons.${variant}`,\r\n    }}\r\n  />\r\n)\r\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { AppLink } from '../components/AppLink'\nimport { SEO } from '../components/seo'\nimport { Button } from '../components/button'\nimport useTranslations from '../components/useTranslations'\n\nconst Index = ({ data: { allMdx } }) => {\n  const { hello, subline } = useTranslations()\n\n  return (\n    <React.Fragment>\n      <SEO />\n      <div sx={{ py: 3 }}>\n        <h1 sx={{ fontSize: `3em` }}>{hello}</h1>\n        <p sx={{ fontSize: `1.5em` }}>{subline}</p>\n        <Button variant=\"gray\">About</Button>\n        <Button variant=\"gray\">Blog</Button>\n      </div>\n      <hr style={{ margin: `2rem 0` }} />\n      <ul\n        className=\"post-list\"\n        sx={{\n          listStyle: 'none',\n          m: 0,\n          px: 3,\n          py: 4,\n        }}\n      >\n        {allMdx.edges.map(({ node: post }) => (\n          <li\n            key={`${post.frontmatter.title}-${post.fields.locale}`}\n            sx={{\n              mb: 4,\n            }}\n          >\n            <h2\n              sx={{\n                m: 0,\n              }}\n            >\n              <AppLink\n                to={`/${post.parent.relativeDirectory}`}\n                sx={{\n                  color: 'inherit',\n                  textDecoration: 'none',\n                  ':hover,:focus': {\n                    color: 'primary',\n                    textDecoration: 'underline',\n                  },\n                }}\n              >\n                {post.frontmatter.title}\n              </AppLink>\n            </h2>\n            <small sx={{ fontWeight: 'bold' }}>{post.frontmatter.date}</small>\n          </li>\n        ))}\n      </ul>\n    </React.Fragment>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index($locale: String!, $dateFormat: String!) {\n    allMdx(\n      filter: { fields: { locale: { eq: $locale } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: $dateFormat)\n          }\n          fields {\n            locale\n          }\n          parent {\n            ... on File {\n              relativeDirectory\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}