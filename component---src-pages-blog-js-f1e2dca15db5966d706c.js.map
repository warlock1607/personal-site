{"version":3,"sources":["webpack:///./src/components/AppLink.js","webpack:///./src/pages/blog.js"],"names":["AppLink","to","props","test","isInternal","a","href","as","LocalizedLink","Blog","allMdx","data","blog","useTranslations","Fragment","title","description","h1","className","sx","listStyle","m","py","pl","edges","map","post","node","key","frontmatter","fields","locale","mb","h2","parent","relativeDirectory","fontWeight","date","query"],"mappings":"kOAIA,IAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAOC,E,oIAAV,iBAHD,KAAKC,KAIlBF,KAHU,SAAAA,GAAE,MAAI,YAAYE,KAAKF,GAGzBG,CAAWH,GACxB,kBAAC,IAAOI,EAAR,iBAAcH,EAAd,CAAqBI,KAAML,KAE3B,kBAAC,IAAOI,EAAR,eAAUE,GAAIC,IAAeP,GAAIA,GAAQC,M,kCCX7C,sHAgDeO,UAxCF,SAAC,GAA0B,IAAhBC,EAAe,EAAvBC,KAAQD,OACdE,EAASC,cAATD,KAER,OACE,YAAC,IAAME,SAAP,KACE,YAAC,IAAD,CAAKC,MAAOH,EAAKG,MAAOC,YAAaJ,EAAKI,cAC1C,YAAC,IAAOC,GAAR,KAAYL,EAAKG,OACjB,kBACEG,UAAU,YACVC,GAAI,CACFC,UAAW,OACXC,EAAG,EACHC,GAAI,EACJC,GAAI,IAGLb,EAAOc,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,OAChB,kBACEC,IAAQF,EAAKG,YAAYd,MAAtB,IAA+BW,EAAKI,OAAOC,OAC9CZ,GAAI,CACFa,GAAI,IAGN,YAAC,IAAOC,GAAR,CACEd,GAAI,CACFE,EAAG,IAGL,YAAC,IAAD,CAASpB,GAAE,SAAWyB,EAAKQ,OAAOC,mBAC/BT,EAAKG,YAAYd,QAGtB,qBAAOI,GAAI,CAAEiB,WAAY,SAAWV,EAAKG,YAAYQ,aAU1D,IAAMC,EAAK","file":"component---src-pages-blog-js-f1e2dca15db5966d706c.js","sourcesContent":["import React from 'react'\r\nimport { Styled } from 'theme-ui'\r\nimport { LocalizedLink } from './localizedLink'\r\n\r\nconst isHash = str => /^#/.test(str)\r\nconst isInternal = to => /^\\/(?!\\/)/.test(to)\r\n\r\nexport const AppLink = ({ to, ...props }) =>\r\n  isHash(to) || !isInternal(to) ? (\r\n    <Styled.a {...props} href={to} />\r\n  ) : (\r\n    <Styled.a as={LocalizedLink} to={to} {...props} />\r\n  )\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from 'theme-ui'\r\nimport React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { AppLink } from '../components/AppLink'\r\nimport { SEO } from '../components/seo'\r\nimport useTranslations from '../components/useTranslations'\r\n\r\nconst Blog = ({ data: { allMdx } }) => {\r\n  const { blog } = useTranslations()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SEO title={blog.title} description={blog.description} />\r\n      <Styled.h1>{blog.title}</Styled.h1>\r\n      <ul\r\n        className=\"post-list\"\r\n        sx={{\r\n          listStyle: 'none',\r\n          m: 0,\r\n          py: 4,\r\n          pl: 0,\r\n        }}\r\n      >\r\n        {allMdx.edges.map(({ node: post }) => (\r\n          <li\r\n            key={`${post.frontmatter.title}-${post.fields.locale}`}\r\n            sx={{\r\n              mb: 4,\r\n            }}\r\n          >\r\n            <Styled.h2\r\n              sx={{\r\n                m: 0,\r\n              }}\r\n            >\r\n              <AppLink to={`/blog/${post.parent.relativeDirectory}`}>\r\n                {post.frontmatter.title}\r\n              </AppLink>\r\n            </Styled.h2>\r\n            <small sx={{ fontWeight: 'bold' }}>{post.frontmatter.date}</small>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nexport const query = graphql`\r\n  query Blog($locale: String!, $dateFormat: String!) {\r\n    allMdx(\r\n      filter: {\r\n        fileAbsolutePath: { glob: \"**/content/blog/**\" }\r\n        fields: { locale: { eq: $locale } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: $dateFormat)\r\n          }\r\n          fields {\r\n            locale\r\n          }\r\n          parent {\r\n            ... on File {\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}