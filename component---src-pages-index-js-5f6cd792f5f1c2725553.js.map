{"version":3,"sources":["webpack:///./src/components/AppLink.js","webpack:///./src/pages/index.js"],"names":["AppLink","to","props","test","isInternal","a","href","as","LocalizedLink","Index","author","data","site","siteMetadata","useTranslations","index","blog","about","Fragment","sx","py","fontSize","h1","hello","subline","mr","title","pb","maxWidth","h2","contacts","email","telegram","vk","github","projects","display","alignItems","flexWrap","width","heght","fill","ml","pt","h3","m","t2ch","description","query"],"mappings":"kOAIA,IAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAOC,E,oIAAV,iBAHD,KAAKC,KAIlBF,KAHU,SAAAA,GAAE,MAAI,YAAYE,KAAKF,GAGzBG,CAAWH,GACxB,kBAAC,IAAOI,EAAR,iBAAcH,EAAd,CAAqBI,KAAML,KAE3B,kBAAC,IAAOI,EAAR,eAAUE,GAAIC,IAAeP,GAAIA,GAAQC,M,kCCX7C,8IAgEeO,UAtDD,SAAC,GAMR,IAHeC,EAGhB,EALJC,KACEC,KACEC,aAAgBH,OAGhB,EAC2BI,cAAvBC,EADJ,EACIA,MAAOC,EADX,EACWA,KAAMC,EADjB,EACiBA,MACrB,OACE,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,MACA,mBAAKC,GAAI,CAAEC,GAAI,EAAGC,SAAS,WACzB,YAAC,IAAOC,GAAR,KAAYP,EAAMQ,OAClB,qBAAIR,EAAMS,SACV,YAAC,IAAD,CAASL,GAAI,CAAEM,GAAI,GAAKxB,GAAG,UACxBgB,GACQ,IACX,YAAC,IAAD,CAAShB,GAAG,SAASe,EAAKU,QAE5B,mBAAKP,GAAI,CAAEQ,GAAI,EAAGC,SAAS,YAAcP,SAAS,WAChD,YAAC,IAAOQ,GAAR,KAAYd,EAAMe,UAClB,qBACE,YAAC,IAAD,CAAS7B,GAAE,UAAYS,EAAOqB,OAAUrB,EAAOqB,QAEjD,YAAC,IAAD,CAAS9B,GAAIS,EAAOsB,UAApB,YACA,YAAC,IAAD,MACA,YAAC,IAAD,CAAS/B,GAAIS,EAAOuB,IAApB,MACA,YAAC,IAAD,MACA,YAAC,IAAD,CAAShC,GAAIS,EAAOwB,QAApB,WAEF,mBAAKf,GAAI,CAAES,SAAS,YAAcP,SAAS,UACzC,YAAC,IAAOQ,GAAR,KAAYd,EAAMoB,SAAST,OAC3B,mBACEP,GAAI,CACFiB,QAAQ,OACRC,WAAW,SACXC,SAAS,SAGX,mBAAKnB,GAAI,CAAES,SAAU,KACnB,YAAC,IAAD,CAAUT,GAAI,CAAEoB,MAAM,OAASC,MAAM,OAASC,KAAK,WAErD,mBAAKtB,GAAI,CAAEuB,GAAI,CAAC,EAAG,GAAIC,GAAI,CAAC,EAAG,KAC7B,YAAC,IAAOC,GAAR,CAAWzB,GAAI,CAAE0B,EAAG,IAClB,YAAC,IAAD,CAAS5C,GAAG,2BAAZ,SAEF,qBAAIc,EAAMoB,SAASW,KAAKC,kBAU7B,IAAMC,EAAK","file":"component---src-pages-index-js-5f6cd792f5f1c2725553.js","sourcesContent":["import React from 'react'\r\nimport { Styled } from 'theme-ui'\r\nimport { LocalizedLink } from './localizedLink'\r\n\r\nconst isHash = str => /^#/.test(str)\r\nconst isInternal = to => /^\\/(?!\\/)/.test(to)\r\n\r\nexport const AppLink = ({ to, ...props }) =>\r\n  isHash(to) || !isInternal(to) ? (\r\n    <Styled.a {...props} href={to} />\r\n  ) : (\r\n    <Styled.a as={LocalizedLink} to={to} {...props} />\r\n  )\r\n","/** @jsx jsx */\nimport { jsx, Styled } from 'theme-ui'\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { AppLink } from '../components/AppLink'\nimport { SEO } from '../components/seo'\nimport { LinkDivider } from '../components/linkDivider'\nimport { T2chIcon } from '../components/icons'\nimport useTranslations from '../components/useTranslations'\n\nconst Index = ({\n  data: {\n    site: {\n      siteMetadata: { author },\n    },\n  },\n}) => {\n  const { index, blog, about } = useTranslations()\n  return (\n    <React.Fragment>\n      <SEO />\n      <div sx={{ py: 4, fontSize: `1.5rem` }}>\n        <Styled.h1>{index.hello}</Styled.h1>\n        <p>{index.subline}</p>\n        <AppLink sx={{ mr: 2 }} to=\"/about\">\n          {about}\n        </AppLink>{' '}\n        <AppLink to=\"/blog\">{blog.title}</AppLink>\n      </div>\n      <div sx={{ pb: 4, maxWidth: `container`, fontSize: `1.2rem` }}>\n        <Styled.h2>{index.contacts}</Styled.h2>\n        <p>\n          <AppLink to={`mailto:${author.email}`}>{author.email}</AppLink>\n        </p>\n        <AppLink to={author.telegram}>Telegram</AppLink>\n        <LinkDivider />\n        <AppLink to={author.vk}>VK</AppLink>\n        <LinkDivider />\n        <AppLink to={author.github}>Github</AppLink>\n      </div>\n      <div sx={{ maxWidth: `container`, fontSize: `1.2em` }}>\n        <Styled.h2>{index.projects.title}</Styled.h2>\n        <div\n          sx={{\n            display: `flex`,\n            alignItems: `center`,\n            flexWrap: `wrap`,\n          }}\n        >\n          <div sx={{ maxWidth: 96 }}>\n            <T2chIcon sx={{ width: `100%`, heght: `100%`, fill: `text` }} />\n          </div>\n          <div sx={{ ml: [0, 3], pt: [3, 0] }}>\n            <Styled.h3 sx={{ m: 0 }}>\n              <AppLink to=\"https://t2ch.github.io/\">T2CH</AppLink>\n            </Styled.h3>\n            <p>{index.projects.t2ch.description}</p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index {\n    site {\n      siteMetadata {\n        author {\n          telegram\n          github\n          vk\n          email\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}