{"version":3,"sources":["webpack:///./src/components/drawer.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["StyledLocalizedLink","props","sx","variant","Drawer","children","handleClose","t","useTranslation","width","height","alignItems","p","display","fontSize","onClick","to","MobileNavigation","useState","isOpen","setOpenBoolean","outlineStyle","cursor","aria-label","fill","position","top","left","zIndex","backgroundColor","animation","pl","color","flexGrow","DesktopNavigation","Layout","path","marginLeft","px","borderBottom","borderColor","mx","py","Blog","data","title","description","h1","maxWidth","className","listStyle","m","allFile","nodes","map","post","childMdx","key","frontmatter","mb","h2","a","as","LocalizedLink","slug","fontWeight","date","fontStyle","timeToRead","foreword","query"],"mappings":"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","file":"component---src-pages-blog-js-06183b7ef3d70cadc820.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { LocalizedLink } from 'gatsby-theme-i18n'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Bio from './bio'\r\n\r\nconst StyledLocalizedLink = ({ ...props }) => {\r\n  return <LocalizedLink sx={{ variant: 'navlink' }} {...props} />\r\n}\r\n\r\nconst Drawer = ({ children, handleClose = null, ...props }) => {\r\n  const { t } = useTranslation('navigation')\r\n\r\n  return (\r\n    <div\r\n      sx={{\r\n        width: ['15em', '18em'],\r\n        height: '100vh',\r\n      }}\r\n      {...props}\r\n    >\r\n      <Bio sx={{ alignItems: 'flex-start' }} />\r\n      <nav\r\n        sx={{\r\n          p: 3,\r\n          display: `grid`,\r\n          alignItems: 'flex-start',\r\n          fontSize: `1.2rem`,\r\n        }}\r\n      >\r\n        <StyledLocalizedLink onClick={handleClose} to=\"/\">\r\n          {t(['navigation:home', 'Home'])}\r\n        </StyledLocalizedLink>\r\n        <StyledLocalizedLink onClick={handleClose} to=\"/blog/\">\r\n          {t(['navigation:blog', 'Blog'])}\r\n        </StyledLocalizedLink>\r\n        <StyledLocalizedLink onClick={handleClose} to=\"/about/\">\r\n          {t(['navigation:about', 'About'])}\r\n        </StyledLocalizedLink>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Drawer","/** @jsx jsx */\r\nimport { jsx, IconButton } from 'theme-ui'\r\nimport { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { MenuIcon, CloseIcon } from './icons'\r\nimport Drawer from './drawer'\r\n\r\nexport const MobileNavigation = ({ children, ...props }) => {\r\n  const { t } = useTranslation('buttons')\r\n  const [isOpen, setOpenBoolean] = useState(false)\r\n\r\n  return (\r\n    <div sx={{ display: [`block`, `none`] }} {...props}>\r\n      <IconButton\r\n        sx={{\r\n          outlineStyle: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n        aria-label={t(['buttons:nav.open', 'Open navigation'])}\r\n        onClick={() => setOpenBoolean(true)}\r\n      >\r\n        <MenuIcon sx={{ fill: `text` }} />\r\n      </IconButton>\r\n      <div\r\n        sx={{\r\n          display: isOpen ? `flex` : `none`,\r\n          alignItems: `flex-start`,\r\n          height: `100vh`,\r\n          width: `100vw`,\r\n          position: `fixed`,\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: 2,\r\n          backgroundColor: `rgba(0, 0, 0, 0.7)`,\r\n        }}\r\n      >\r\n        <div\r\n          sx={{\r\n            display: `flex`,\r\n            height: `inherit`,\r\n            animation: 'drawer 0.2s ease-out 0s',\r\n          }}\r\n        >\r\n          <Drawer\r\n            sx={{\r\n              backgroundColor: `background`,\r\n            }}\r\n            handleClose={() => setOpenBoolean(false)}\r\n          />\r\n          <div\r\n            sx={{\r\n              height: '3.5em',\r\n              display: 'flex',\r\n              alignItems: `center`,\r\n              pl: 1,\r\n            }}\r\n          >\r\n            <IconButton\r\n              aria-label={t(['buttons:nav.close', 'Close navigation'])}\r\n              onClick={() => setOpenBoolean(false)}\r\n              sx={{\r\n                color: 'hsl(210, 50%, 96%)',\r\n                outlineStyle: 'none',\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              <CloseIcon sx={{ fill: 'currentColor' }} />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        {/* eslint-disable */}\r\n        <div\r\n          aria-label={t(['buttons:nav.close', 'Close navigation'])}\r\n          sx={{ height: `inherit`, flexGrow: `1` }}\r\n          onClick={() => setOpenBoolean(false)}\r\n        />\r\n        {/* eslint-enable */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const DesktopNavigation = () => {\r\n  return (\r\n    <Drawer\r\n      sx={{\r\n        display: ['none', 'block'],\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        backgroundColor: `muted`,\r\n      }}\r\n     />\r\n  )\r\n}\r\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { DesktopNavigation, MobileNavigation } from './navigation'\nimport ThemeButton from './themeButton'\nimport LocalePanel from './localePanel'\n\nconst Layout = ({ children, path }) => (\n  <Fragment>\n    <DesktopNavigation />\n    <div\n      sx={{\n        marginLeft: [0, '18em'],\n      }}\n    >\n      <header\n        sx={{\n          display: `flex`,\n          alignItems: `center`,\n          height: '3.5em',\n          position: 'fixed',\n          width: ['100%', `calc(100% - 18em)`],\n          top: 0,\n          px: 3,\n          backgroundColor: `background`,\n          borderBottom: '1px solid',\n          borderColor: 'muted',\n          zIndex: 1,\n        }}\n      >\n        <MobileNavigation />\n        <div sx={{ mx: 'auto' }} />\n        <LocalePanel path={path} />\n        <ThemeButton />\n      </header>\n      <div\n        sx={{\n          py: '3.5rem',\n          px: 3,\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  </Fragment>\n)\n\nexport default Layout\n","/** @jsx jsx */\r\nimport { Styled, jsx } from 'theme-ui'\r\nimport { Fragment } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { LocalizedLink } from 'gatsby-theme-i18n'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst Blog = ({ data }) => {\r\n  const { t } = useTranslation('blog')\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        title={t(['blog:title', 'Blog'])}\r\n        description={t(['blog:description', 'List of blog posts'])}\r\n      />\r\n      <Layout path=\"/blog/\">\r\n        <Styled.h1>{t(['blog:title', 'Blog'])}</Styled.h1>\r\n        <div sx={{ maxWidth: 768 }}>\r\n          <ul\r\n            className=\"post-list\"\r\n            sx={{\r\n              listStyle: 'none',\r\n              m: 0,\r\n              pl: 0,\r\n            }}\r\n          >\r\n            {data.allFile.nodes.map(({ childMdx: post }) => (\r\n              <li\r\n                key={`${post.frontmatter.title}`}\r\n                sx={{\r\n                  mb: 4,\r\n                }}\r\n              >\r\n                <Styled.h2\r\n                  sx={{\r\n                    m: 0,\r\n                  }}\r\n                >\r\n                  <Styled.a as={LocalizedLink} to={post.frontmatter.slug}>\r\n                    {post.frontmatter.title}\r\n                  </Styled.a>\r\n                </Styled.h2>\r\n                <small sx={{ fontWeight: `bold` }}>\r\n                  {post.frontmatter.date}\r\n                </small>\r\n                <br />\r\n                <small sx={{ fontStyle: `italic` }}>{`${post.timeToRead} ${t([\r\n                  'blog:m',\r\n                  'min read',\r\n                ])}`}</small>\r\n                <p>{post.frontmatter.foreword}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nexport const query = graphql`\r\n  query($locale: String!, $dateFormat: String!) {\r\n    allFile(\r\n      filter: {\r\n        sourceInstanceName: { eq: \"blog\" }\r\n        childMdx: { fields: { locale: { eq: $locale } } }\r\n      }\r\n    ) {\r\n      nodes {\r\n        childMdx {\r\n          frontmatter {\r\n            slug\r\n            title\r\n            date(formatString: $dateFormat)\r\n            foreword\r\n          }\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}