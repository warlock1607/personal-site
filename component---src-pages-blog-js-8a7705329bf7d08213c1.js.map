{"version":3,"sources":["webpack:///./src/components/AppLink.js","webpack:///./src/pages/blog.js"],"names":["AppLink","to","props","test","isInternal","a","href","as","LocalizedLink","Blog","allMdx","data","useTranslations","blog","m","Fragment","title","description","sx","maxWidth","className","listStyle","py","pl","edges","map","post","node","key","frontmatter","fields","locale","mb","h2","parent","relativeDirectory","fontWeight","date","fontStyle","timeToRead","foreword","query"],"mappings":"kOAIA,IAGaA,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAOC,E,oIAAV,iBAHD,KAAKC,KAIlBF,KAHU,SAAAA,GAAE,MAAI,YAAYE,KAAKF,GAGzBG,CAAWH,GACxB,kBAAC,IAAOI,EAAR,iBAAcH,EAAd,CAAqBI,KAAML,KAE3B,kBAAC,IAAOI,EAAR,eAAUE,GAAIC,IAAeP,GAAIA,GAAQC,M,kCCX7C,sHAsDeO,UA9CF,SAAC,GAA0B,IAAhBC,EAAe,EAAvBC,KAAQD,OAAe,EACjBE,cAAZC,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,EAEd,OACE,YAAC,IAAMC,SAAP,KACE,YAAC,IAAD,CAAKC,MAAOH,EAAKG,MAAOC,YAAaJ,EAAKI,cAC1C,mBAAKC,GAAI,CAAEC,SAAU,cACnB,kBACEC,UAAU,YACVF,GAAI,CACFG,UAAW,OACXP,EAAG,EACHQ,GAAI,EACJC,GAAI,IAGLb,EAAOc,MAAMC,KAAI,gBAASC,EAAT,EAAGC,KAAH,OAChB,kBACEC,IAAQF,EAAKG,YAAYb,MAAtB,IAA+BU,EAAKI,OAAOC,OAC9Cb,GAAI,CACFc,GAAI,IAGN,YAAC,IAAOC,GAAR,CACEf,GAAI,CACFJ,EAAG,IAGL,YAAC,IAAD,CAASb,GAAE,SAAWyB,EAAKQ,OAAOC,mBAC/BT,EAAKG,YAAYb,QAGtB,qBAAOE,GAAI,CAAEkB,WAAW,SAAYV,EAAKG,YAAYQ,MACrD,uBACA,qBACEnB,GAAI,CAAEoB,UAAU,WACbZ,EAAKa,WAFV,IAEwBzB,GACxB,qBAAIY,EAAKG,YAAYW,kBAW5B,IAAMC,EAAK","file":"component---src-pages-blog-js-8a7705329bf7d08213c1.js","sourcesContent":["import React from 'react'\r\nimport { Styled } from 'theme-ui'\r\nimport { LocalizedLink } from './localizedLink'\r\n\r\nconst isHash = str => /^#/.test(str)\r\nconst isInternal = to => /^\\/(?!\\/)/.test(to)\r\n\r\nexport const AppLink = ({ to, ...props }) =>\r\n  isHash(to) || !isInternal(to) ? (\r\n    <Styled.a {...props} href={to} />\r\n  ) : (\r\n    <Styled.a as={LocalizedLink} to={to} {...props} />\r\n  )\r\n","/** @jsx jsx */\r\nimport { jsx, Styled } from 'theme-ui'\r\nimport React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { AppLink } from '../components/AppLink'\r\nimport { SEO } from '../components/seo'\r\nimport useTranslations from '../components/useTranslations'\r\n\r\nconst Blog = ({ data: { allMdx } }) => {\r\n  const { blog, m } = useTranslations()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SEO title={blog.title} description={blog.description} />\r\n      <div sx={{ maxWidth: 'container' }}>\r\n        <ul\r\n          className=\"post-list\"\r\n          sx={{\r\n            listStyle: 'none',\r\n            m: 0,\r\n            py: 4,\r\n            pl: 0,\r\n          }}\r\n        >\r\n          {allMdx.edges.map(({ node: post }) => (\r\n            <li\r\n              key={`${post.frontmatter.title}-${post.fields.locale}`}\r\n              sx={{\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <Styled.h2\r\n                sx={{\r\n                  m: 0,\r\n                }}\r\n              >\r\n                <AppLink to={`/blog/${post.parent.relativeDirectory}`}>\r\n                  {post.frontmatter.title}\r\n                </AppLink>\r\n              </Styled.h2>\r\n              <small sx={{ fontWeight: `bold` }}>{post.frontmatter.date}</small>\r\n              <br />\r\n              <small\r\n                sx={{ fontStyle: `italic` }}\r\n              >{`${post.timeToRead} ${m}`}</small>\r\n              <p>{post.frontmatter.foreword}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nexport const query = graphql`\r\n  query Blog($locale: String!, $dateFormat: String!) {\r\n    allMdx(\r\n      filter: {\r\n        fileAbsolutePath: { glob: \"**/content/blog/**\" }\r\n        fields: { locale: { eq: $locale } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: $dateFormat)\r\n            foreword\r\n          }\r\n          timeToRead\r\n          fields {\r\n            locale\r\n          }\r\n          parent {\r\n            ... on File {\r\n              relativeDirectory\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}